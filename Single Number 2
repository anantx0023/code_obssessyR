Given an integer array nums where every element appears three times except for one, which appears exactly once. Find the single element and return it.
You must implement a solution with a linear runtime complexity and use only constant extra space.
<----------------------------------------------------------------------------code------------------------------------------------------------------------------------------------------------------------------>
class Solution {
public:
    int singleNumber(vector<int>& nums) {
        int ans = 0;
        int size = nums.size();
        for(int bit = 0; bit<32; bit++){
            int cnt = 0;
            for(int i=0; i<size; i++){
                 if(nums[i]&(1<<bit)) cnt++;
            }
            if(cnt%3==1) ans = ans | (1<<bit);
        }
        return ans;
    }
};
